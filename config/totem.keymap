//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define SYM  1
#define NAV 2
#define ADJ 3

&sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

&lt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

/ {
    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp N2>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp G &kp I &kp F>
                ;
        };
    };
   combos {
            compatible = "zmk,combos";
            combo_tab {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp TAB>;
            };
           
           combo_hyphen {
                timeout-ms = <50>;
                key-positions = <19 31>;
                bindings = <&kp MINUS>;
            };
           combo_tilde {
                timeout-ms = <50>;
                key-positions = <0 20>;
                bindings = <&kp TILDE>;
            };
    };
    keymap {
        compatible = "zmk,keymap";
        BASE {
            bindings = <
                            &kp Q       &kp W       &kp E       &kp R       &kp T                  &kp Y       &kp U       &kp I       &kp O       &kp P
                            &kp A       &kp S       &kp D       &kp F       &kp G                  &kp H       &kp J       &kp K       &kp L       &kp SEMI
              &kp LSHIFT    &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH   &kp RSHIFT 
                                                 &kp LCTRL  &kp SPACE  &mo SYM                 &mo NAV    &kp RETURN  &kp LALT 
            >;
        };
        SYM {

              bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp KP_MULTIPLY  &kp SQT     &kp DQT       
                &kp N1   &kp N2    &kp N3     &kp N4   &kp N5                    &kp N6  &kp N7   &kp N8   &kp N9   &kp N0
    &trans      &kp RA(F18) &kp RA(F19) &trans      &trans      &trans          &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_NEXT  &kp BSLH   &trans         
                                       &mo ADJ &trans      &trans               &trans      &trans    &trans      
                        >;
                };
       NAV {
            bindings = <
                            &kp TILDE    &kp KP_PLUS   &kp LPAR   &kp RPAR  &kp PG_UP        &kp PG_DWN    &kp N7   &kp KP_MULTIPLY   &kp N9   &kp KP_PLUS
                            &kp PIPE     &kp EQUAL    &kp LBRC   &kp RBRC   &kp DLLR        &kp CARET      &kp DQT   &kp SQT   &kp UP   &kp KP_MINUS
                &kp ESC    &kp DEL    &kp LGUI   &kp LBKT   &kp RBKT  &kp CAPS          &kp LCTRL      &kp LALT   &kp LEFT   &kp DOWN   &kp RIGHT  &kp GRAVE      
                                                    &trans   &kp BSPC &kp RC(BSPC)       &trans   &trans     &kp N0     
            >;
        };
       ADJ {
            bindings = <
                            &sys_reset  &trans      &out OUT_TOG &trans     &bt BT_NXT      &trans      &kp F7      &kp F8      &kp F9      &kp F12
                            &bootloader &trans      &trans      &trans      &bt BT_PRV      &trans      &kp F4      &kp F5      &kp F6      &kp F11  
                &bt BT_CLR  &trans      &trans      &trans      &trans      &trans          &trans      &kp F1      &kp F2      &kp F3      &kp F10     &trans         
                                                    &trans      &trans      &trans          &trans      &trans      &trans      
            >;
        };
    };
};
